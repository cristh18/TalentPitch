// Mocks generated by Mockito 5.4.6 from annotations
// in talent_pitch/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:talent_pitch/data/datasources/remote/apis/talents_api.dart'
    as _i2;
import 'package:talent_pitch/data/repositories/talents_repository.dart' as _i3;
import 'package:talent_pitch/domain/models/talent_categories_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTalentsApi_0 extends _i1.SmartFake implements _i2.TalentsApi {
  _FakeTalentsApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TalentsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTalentsRepository extends _i1.Mock implements _i3.TalentsRepository {
  MockTalentsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TalentsApi get talentPitchApi => (super.noSuchMethod(
        Invocation.getter(#talentPitchApi),
        returnValue: _FakeTalentsApi_0(
          this,
          Invocation.getter(#talentPitchApi),
        ),
      ) as _i2.TalentsApi);

  @override
  _i4.Future<List<_i5.TalentCategoriesModel>> getTalentCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTalentCategories,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TalentCategoriesModel>>.value(
            <_i5.TalentCategoriesModel>[]),
      ) as _i4.Future<List<_i5.TalentCategoriesModel>>);
}
